name: Build and deploy an app to AKS

on:
  workflow_dispatch:


env:
  AZURE_CONTAINER_REGISTRY: "jaz400"
  CONTAINER_NAME: "docker-app"
  RESOURCE_GROUP: "jaz400"  
  CLUSTER_NAME: "jaz400"
  DEPLOYMENT_MANIFEST_PATH: "deployment.yml"

jobs:
  buildImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v4

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v2.1.0
        with:
           creds: ${{ secrets.CREDS }}
      #          client-id: ${{ secrets.AZURE_CLIENT_ID }}
      #          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      #          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Create RG
      - name: Create Resource Group
        run: |
          az group create --name ${{ env.RESOURCE_GROUP }} --location "westeurope"

      # Create ACR (BICEP)
      - name: Deploy Bicep file
        uses: azure/arm-deploy@v2
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.RESOURCE_GROUP }}
          template: IaC/acr.bicep
          parameters: 'registryName=${{ env.AZURE_CONTAINER_REGISTRY }}'
          failOnStdErr: false


      # Creates ACR
      - name: Create ACR
        run: |
          az acr create -n ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} --sku Standard --admin-enabled true
              
      # Creates AKS
      #- name: Create AKS
      #  run: |
      #    az AKS create -n ${{ env.CLUSTER_NAME }} -g ${{ env.RESOURCE_GROUP }} --tier standard --enable-azure-monitor-metrics --attach-acr ${{ env.AZURE_CONTAINER_REGISTRY }} --enable-managed-identity  --generate-ssh-keys
      
      # Upload source and build container image in ACR
      - name: Build and push image to ACR
        run: |
          az acr build --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:latest --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} .

  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: [buildImage]
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v4.1.2

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          creds: ${{ secrets.CREDS }}
#          client-id: ${{ secrets.AZURE_CLIENT_ID }}
#          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
#          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v4
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      # Deploys application based on given manifest file
      - name: Deploys application
        uses: Azure/k8s-deploy@v5
        with:
          action: deploy
          manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
          images: |
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:latest
